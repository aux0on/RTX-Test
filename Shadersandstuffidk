--// Shader + Time of Day GUI Script with Blur Slider (PC + Mobile draggable) //--
local Lighting = game:GetService("Lighting")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- === Effects ===
local blur = Instance.new("BlurEffect", Lighting)
blur.Size = 0

local bloom = Instance.new("BloomEffect", Lighting)
bloom.Intensity = 0.4
bloom.Threshold = 0.8
bloom.Size = 56

local sunRays = Instance.new("SunRaysEffect", Lighting)
sunRays.Intensity = 0.25
sunRays.Spread = 1

local colorCorrection = Instance.new("ColorCorrectionEffect", Lighting)
colorCorrection.Brightness = 0
colorCorrection.Contrast = 0.1
colorCorrection.Saturation = 0.1
colorCorrection.TintColor = Color3.fromRGB(255, 255, 255)

-- === Helper Tween Functions ===
local function tweenCorrection(props, time)
	TweenService:Create(colorCorrection, TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), props):Play()
end

local function tweenBlur(size, time)
	TweenService:Create(blur, TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = size}):Play()
end

-- === Time Presets ===
local function setTime(option)
	if option == "Day" then
		Lighting.TimeOfDay = "14:00:00"
		tweenCorrection({Brightness = 0.05, Saturation = 0.15, TintColor = Color3.fromRGB(255,255,255)}, 1)

	elseif option == "Night" then
		Lighting.TimeOfDay = "00:00:00"
		tweenCorrection({Brightness = -0.2, Saturation = -0.1, TintColor = Color3.fromRGB(200,200,255)}, 1)

	elseif option == "BloodMoon" then
		Lighting.TimeOfDay = "00:00:00"
		tweenCorrection({Brightness = -0.3, Saturation = 0.2, TintColor = Color3.fromRGB(255,50,50)}, 2)

	elseif option == "VoidNight" then
		Lighting.TimeOfDay = "00:00:00"
		tweenCorrection({Brightness = -0.1, Saturation = 0.3, TintColor = Color3.fromRGB(150,0,255)}, 2)
	end
end

-- === Reset ===
local function resetLighting()
	Lighting.TimeOfDay = "14:00:00"
	bloom.Intensity = 1
	bloom.Threshold = 0.8
	bloom.Size = 24
	sunRays.Intensity = 0
	tweenCorrection({Brightness = 0, Contrast = 0, Saturation = 0, TintColor = Color3.fromRGB(255,255,255)}, 1)
	tweenBlur(0, 0.8)
	print("Lighting reset to default.")
end

-- === GUI Setup ===
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ShaderMenu"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main frame
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 220, 0, 320)
frame.Position = UDim2.new(0, 20, 0.5, -160)
frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
frame.BorderSizePixel = 2
frame.Visible = true

-- Minimize button
local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0, 50, 0, 30)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.Text = "‚â°"
toggleButton.BackgroundColor3 = Color3.fromRGB(50,50,50)
toggleButton.TextColor3 = Color3.fromRGB(255,255,255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 20

toggleButton.MouseButton1Click:Connect(function()
	frame.Visible = not frame.Visible
end)

-- Layout
local listLayout = Instance.new("UIListLayout", frame)
listLayout.Padding = UDim.new(0,5)
listLayout.FillDirection = Enum.FillDirection.Vertical
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
listLayout.VerticalAlignment = Enum.VerticalAlignment.Top

-- Helper function to make buttons
local function makeButton(text, callback)
	local button = Instance.new("TextButton", frame)
	button.Size = UDim2.new(0,200,0,40)
	button.Text = text
	button.BackgroundColor3 = Color3.fromRGB(60,60,60)
	button.TextColor3 = Color3.fromRGB(255,255,255)
	button.Font = Enum.Font.SourceSansBold
	button.TextSize = 20
	button.MouseButton1Click:Connect(callback)
	return button
end

-- Buttons
makeButton("‚òÄÔ∏è Day", function() setTime("Day") end)
makeButton("üåô Night", function() setTime("Night") end)
makeButton("üåë Blood Moon", function() setTime("BloodMoon") end)
makeButton("üíú Void Night", function() setTime("VoidNight") end)
makeButton("üîÑ Reset Lighting", resetLighting)

-- === Blur Strength Slider ===
local sliderFrame = Instance.new("Frame", frame)
sliderFrame.Size = UDim2.new(0,200,0,50)
sliderFrame.BackgroundTransparency = 1

local sliderLabel = Instance.new("TextLabel", sliderFrame)
sliderLabel.Size = UDim2.new(1,0,0,20)
sliderLabel.Text = "üé• Motion Blur Strength"
sliderLabel.TextColor3 = Color3.fromRGB(255,255,255)
sliderLabel.BackgroundTransparency = 1
sliderLabel.Font = Enum.Font.SourceSansBold
sliderLabel.TextSize = 18

local sliderBar = Instance.new("Frame", sliderFrame)
sliderBar.Size = UDim2.new(1,0,0,10)
sliderBar.Position = UDim2.new(0,0,0,30)
sliderBar.BackgroundColor3 = Color3.fromRGB(80,80,80)

local sliderKnob = Instance.new("Frame", sliderBar)
sliderKnob.Size = UDim2.new(0,10,1,0)
sliderKnob.BackgroundColor3 = Color3.fromRGB(200,200,200)

-- Slider Dragging
local draggingSlider = false
local function updateSlider(inputX)
	local relativeX = math.clamp((inputX - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
	local blurStrength = math.floor(relativeX * 20) -- 0 to 20 strength
	sliderKnob.Position = UDim2.new(relativeX, -5, 0, 0)
	tweenBlur(blurStrength, 0.2)
end

sliderBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingSlider = true
		updateSlider(input.Position.X)
	end
end)

sliderBar.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingSlider = false
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if draggingSlider and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		updateSlider(input.Position.X)
	end
end)

-- === Dragging Support (PC + Mobile) ===
local dragging, dragInput, dragStart, startPos

local function updateFrame(input)
	local delta = input.Position - dragStart
	local newPos = UDim2.new(
		startPos.X.Scale,
		startPos.X.Offset + delta.X,
		startPos.Y.Scale,
		startPos.Y.Offset + delta.Y
	)
	frame.Position = newPos
end

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		updateFrame(input)
	end
end)

print("Shader GUI loaded with blur slider + mobile dragging.")
